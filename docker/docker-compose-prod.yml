name: gotravix
services:
  db:
    image: postgres:17.5-bookworm
    ports:
    - 5432:5432
    environment:
    - POSTGRES_USER=${POSTGRES_USER}
    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    - POSTGRES_DB_DATA=/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
    - postgres_data:/var/lib/postgresql/data

  db-migrator:
    image: gotravix-migrator:${REPO_SHA:-stable}
    build: 
      context: ..
      dockerfile: migrator/Dockerfile
    depends_on:
      db:
        condition: service_healthy
    environment:
    - DATABASE_URL=${DATABASE_URL}
    - MIGRATOR_PORT=${MIGRATOR_PORT:-80}

  s3:
    image: minio/minio:RELEASE.2025-03-12T18-04-18Z
    command: >- 
      server /data
      --address :9000
      --console-address :9090
    ports:
    - 7000:9000
    - 7070:9090
    environment:
    - MINIO_ROOT_USER=${MINIO_ROOT_USER:-admin}
    - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:9000/minio/health/ready"]
      timeout: 10s
      retries: 5
      interval: 5s
    volumes:
    - minio_data:/data

  backend:
    image: gotravix-api:${REPO_SHA:-stable}
    build:
      context: ..
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
      db-migrator:
        condition: service_started
      s3: 
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "test -f ! /tmp/drain && curl -fs http://localhost:3000/api/v1/health"]
      retries: 4
      interval: 5s
      timeout: 3s
      start_period: 10s
    expose:
    - 3000
    labels:
      docker-rollout.pre-stop-hook: "touch /tmp/drain && sleep 30"
    environment:
    - NODE_ENV=${NODE_ENV:-development}
    - APP_ORIGIN=${APP_ORIGIN}
    - APP_PORT=${APP_PORT}
    - JWT_SECRET=${JWT_SECRET:-myjsonwebtokensecret}
    - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET:-myjsonwebtokensecretrefresh}
    - JWT_SECRET_EXPIRES=${JWT_SECRET_EXPIRES}
    - JWT_REFRESH_SECRET_EXPIRES=${JWT_REFRESH_SECRET_EXPIRES}
    - DATABASE_URL=${DATABASE_URL}
    - SMTP_HOST=${SMTP_HOST}
    - SMTP_PORT=${SMTP_PORT}
    - SMTP_USER=${SMTP_USER} 
    - SMTP_PASSWORD=${SMTP_PASSWORD}
    - SMTP_FROM=${SMTP_FROM}
    - MINIO_ROOT_USER=${MINIO_ROOT_USER-admin}
    - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
    - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
    - POSTGRES_USER=${POSTGRES_USER}
    - POSTGRES_DB=${POSTGRES_DB}
    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    - MIGRATOR_HOSTNAME=${MIGRATOR_HOSTNAME:-migrator}
    - MIGRATOR_PORT=${MIGRATOR_PORT:-80}
    - MIGRATOR_TIMEOUT=${MIGRATOR_TIMEOUT:-30}
    - MIGRATOR_WAIT_INTERVAL=${MIGRATOR_WAIT_INTERVAL:-5}
    - MIGRATOR_STATUS_URL=${MIGRATOR_STATUS_URL:-"http://${MIGRATOR_HOSTNAME}:${MIGRATOR_PORT}/state"}
    - S3_REGION=${S3_REGION}
    - S3_ENDPOINT=${S3_ENDPOINT}
    - APP_S3_ACCESS_KEY=${APP_S3_ACCESS_KEY}
    - APP_S3_SECRET_KEY=${APP_S3_SECRET_KEY}
    - APP_DOCUMENT_BUCKET_NAME=${APP_DOCUMENT_BUCKET_NAME}
    - FRONTEND_BASE_URL=${FRONTEND_BASE_URL}
    - VIRTUAL_HOST=${DOMAIN:-brakusa.com}
    command: |
      sh -c "wait-for-it && npm run start"

  reverse_proxy:
    image: nginxproxy/nginx-proxy:latest
    ports:
    - 3000:80
    restart: unless-stopped
    volumes:
    - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
    - backend
    environment:
    - DEFAULT_HOST=${DOMAIN:-brakusa.com}
    

volumes:
  pgadmin_data:
    driver: local
  postgres_data:
    driver: local
  minio_data:
    driver: local

networks:
  gotravix:
